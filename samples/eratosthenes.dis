0000000: 0061 736d                                 ; WASM_BINARY_MAGIC
0000004: 0100 0000                                 ; WASM_BINARY_VERSION
; section "Type" (1)
0000008: 01                                        ; section code
0000009: 00                                        ; section size (guess)
000000a: 03                                        ; num types
; func type 0
000000b: 60                                        ; func
000000c: 04                                        ; num params
000000d: 7f                                        ; i32
000000e: 7f                                        ; i32
000000f: 7f                                        ; i32
0000010: 7f                                        ; i32
0000011: 00                                        ; num results
; func type 1
0000012: 60                                        ; func
0000013: 01                                        ; num params
0000014: 7f                                        ; i32
0000015: 01                                        ; num results
0000016: 7f                                        ; i32
; func type 2
0000017: 60                                        ; func
0000018: 00                                        ; num params
0000019: 00                                        ; num results
0000009: 10                                        ; FIXUP section size
; section "Import" (2)
000001a: 02                                        ; section code
000001b: 00                                        ; section size (guess)
000001c: 01                                        ; num imports
; import header 0
000001d: 03                                        ; string length
000001e: 656e 76                                  env  ; import module name
0000021: 05                                        ; string length
0000022: 6162 6f72 74                             abort  ; import field name
0000027: 00                                        ; import kind
0000028: 00                                        ; import signature index
000001b: 0d                                        ; FIXUP section size
; section "Function" (3)
0000029: 03                                        ; section code
000002a: 00                                        ; section size (guess)
000002b: 03                                        ; num functions
000002c: 01                                        ; function 0 signature index
000002d: 00                                        ; function 1 signature index
000002e: 02                                        ; function 2 signature index
000002a: 04                                        ; FIXUP section size
; section "Memory" (5)
000002f: 05                                        ; section code
0000030: 00                                        ; section size (guess)
0000031: 01                                        ; num memories
; memory 0
0000032: 00                                        ; limits: flags
0000033: 01                                        ; limits: initial
0000030: 03                                        ; FIXUP section size
; section "Global" (6)
0000034: 06                                        ; section code
0000035: 00                                        ; section size (guess)
0000036: 01                                        ; num globals
0000037: 7f                                        ; i32
0000038: 01                                        ; global mutability
0000039: 41                                        ; i32.const
000003a: 00                                        ; i32 literal
000003b: 0b                                        ; end
0000035: 06                                        ; FIXUP section size
; section "Export" (7)
000003c: 07                                        ; section code
000003d: 00                                        ; section size (guess)
000003e: 03                                        ; num exports
000003f: 05                                        ; string length
0000040: 7072 696d 65                             prime  ; export name
0000045: 00                                        ; export kind
0000046: 01                                        ; export func index
0000047: 05                                        ; string length
0000048: 6162 6f72 74                             abort  ; export name
000004d: 00                                        ; export kind
000004e: 02                                        ; export func index
000004f: 06                                        ; string length
0000050: 6d65 6d6f 7279                           memory  ; export name
0000056: 02                                        ; export kind
0000057: 00                                        ; export memory index
000003d: 1a                                        ; FIXUP section size
; section "Start" (8)
0000058: 08                                        ; section code
0000059: 00                                        ; section size (guess)
000005a: 03                                        ; start func index
0000059: 01                                        ; FIXUP section size
; section "DataCount" (12)
000005b: 0c                                        ; section code
000005c: 00                                        ; section size (guess)
000005d: 0c                                        ; data count
000005c: 01                                        ; FIXUP section size
; section "Code" (10)
000005e: 0a                                        ; section code
000005f: 00                                        ; section size (guess)
0000060: 03                                        ; num functions
; function body 0
0000061: 00                                        ; func body size (guess)
0000062: 01                                        ; local decl count
0000063: 08                                        ; local type count
0000064: 7f                                        ; i32
0000065: 20                                        ; local.get
0000066: 00                                        ; local index
0000067: 41                                        ; i32.const
0000068: 02                                        ; i32 literal
0000069: 46                                        ; i32.eq
000006a: 04                                        ; if
000006b: 40                                        ; void
000006c: 41                                        ; i32.const
000006d: 02                                        ; i32 literal
000006e: 0f                                        ; return
000006f: 05                                        ; else
0000070: 20                                        ; local.get
0000071: 00                                        ; local index
0000072: 41                                        ; i32.const
0000073: 02                                        ; i32 literal
0000074: 48                                        ; i32.lt_s
0000075: 04                                        ; if
0000076: 40                                        ; void
0000077: 41                                        ; i32.const
0000078: 00                                        ; i32 literal
0000079: 0f                                        ; return
000007a: 0b                                        ; end
000007b: 0b                                        ; end
000007c: 20                                        ; local.get
000007d: 00                                        ; local index
000007e: 41                                        ; i32.const
000007f: 01                                        ; i32 literal
0000080: 6b                                        ; i32.sub
0000081: 41                                        ; i32.const
0000082: 02                                        ; i32 literal
0000083: 6d                                        ; i32.div_s
0000084: 22                                        ; local.tee
0000085: 02                                        ; local index
0000086: 41                                        ; i32.const
0000087: fcff ffff 03                              ; i32 literal
000008c: 4b                                        ; i32.gt_u
000008d: 04                                        ; if
000008e: 40                                        ; void
000008f: 41                                        ; i32.const
0000090: a008                                      ; i32 literal
0000092: 41                                        ; i32.const
0000093: d008                                      ; i32 literal
0000095: 41                                        ; i32.const
0000096: 33                                        ; i32 literal
0000097: 41                                        ; i32.const
0000098: 3c                                        ; i32 literal
0000099: 10                                        ; call
000009a: 00                                        ; function index
000009b: 00                                        ; unreachable
000009c: 0b                                        ; end
000009d: 20                                        ; local.get
000009e: 02                                        ; local index
000009f: 41                                        ; i32.const
00000a0: ecff ffff 03                              ; i32 literal
00000a5: 4b                                        ; i32.gt_u
00000a6: 04                                        ; if
00000a7: 40                                        ; void
00000a8: 41                                        ; i32.const
00000a9: 9009                                      ; i32 literal
00000ab: 41                                        ; i32.const
00000ac: d009                                      ; i32 literal
00000ae: 41                                        ; i32.const
00000af: d600                                      ; i32 literal
00000b1: 41                                        ; i32.const
00000b2: 1e                                        ; i32 literal
00000b3: 10                                        ; call
00000b4: 00                                        ; function index
00000b5: 00                                        ; unreachable
00000b6: 0b                                        ; end
00000b7: 20                                        ; local.get
00000b8: 02                                        ; local index
00000b9: 41                                        ; i32.const
00000ba: 10                                        ; i32 literal
00000bb: 6a                                        ; i32.add
00000bc: 22                                        ; local.tee
00000bd: 04                                        ; local index
00000be: 41                                        ; i32.const
00000bf: fcff ffff 03                              ; i32 literal
00000c4: 4b                                        ; i32.gt_u
00000c5: 04                                        ; if
00000c6: 40                                        ; void
00000c7: 41                                        ; i32.const
00000c8: 9009                                      ; i32 literal
00000ca: 41                                        ; i32.const
00000cb: d009                                      ; i32 literal
00000cd: 41                                        ; i32.const
00000ce: 21                                        ; i32 literal
00000cf: 41                                        ; i32.const
00000d0: 1d                                        ; i32 literal
00000d1: 10                                        ; call
00000d2: 00                                        ; function index
00000d3: 00                                        ; unreachable
00000d4: 0b                                        ; end
00000d5: 23                                        ; global.get
00000d6: 00                                        ; global index
00000d7: 22                                        ; local.tee
00000d8: 03                                        ; local index
00000d9: 21                                        ; local.set
00000da: 05                                        ; local index
00000db: 20                                        ; local.get
00000dc: 03                                        ; local index
00000dd: 41                                        ; i32.const
00000de: 04                                        ; i32 literal
00000df: 6a                                        ; i32.add
00000e0: 22                                        ; local.tee
00000e1: 03                                        ; local index
00000e2: 20                                        ; local.get
00000e3: 04                                        ; local index
00000e4: 41                                        ; i32.const
00000e5: 13                                        ; i32 literal
00000e6: 6a                                        ; i32.add
00000e7: 41                                        ; i32.const
00000e8: 70                                        ; i32 literal
00000e9: 71                                        ; i32.and
00000ea: 41                                        ; i32.const
00000eb: 04                                        ; i32 literal
00000ec: 6b                                        ; i32.sub
00000ed: 22                                        ; local.tee
00000ee: 06                                        ; local index
00000ef: 6a                                        ; i32.add
00000f0: 22                                        ; local.tee
00000f1: 04                                        ; local index
00000f2: 3f                                        ; memory.size
00000f3: 00                                        ; memory.size memidx
00000f4: 22                                        ; local.tee
00000f5: 07                                        ; local index
00000f6: 41                                        ; i32.const
00000f7: 10                                        ; i32 literal
00000f8: 74                                        ; i32.shl
00000f9: 41                                        ; i32.const
00000fa: 0f                                        ; i32 literal
00000fb: 6a                                        ; i32.add
00000fc: 41                                        ; i32.const
00000fd: 70                                        ; i32 literal
00000fe: 71                                        ; i32.and
00000ff: 22                                        ; local.tee
0000100: 08                                        ; local index
0000101: 4b                                        ; i32.gt_u
0000102: 04                                        ; if
0000103: 40                                        ; void
0000104: 20                                        ; local.get
0000105: 07                                        ; local index
0000106: 20                                        ; local.get
0000107: 04                                        ; local index
0000108: 20                                        ; local.get
0000109: 08                                        ; local index
000010a: 6b                                        ; i32.sub
000010b: 41                                        ; i32.const
000010c: ffff 03                                   ; i32 literal
000010f: 6a                                        ; i32.add
0000110: 41                                        ; i32.const
0000111: 8080 7c                                   ; i32 literal
0000114: 71                                        ; i32.and
0000115: 41                                        ; i32.const
0000116: 10                                        ; i32 literal
0000117: 76                                        ; i32.shr_u
0000118: 22                                        ; local.tee
0000119: 08                                        ; local index
000011a: 20                                        ; local.get
000011b: 07                                        ; local index
000011c: 20                                        ; local.get
000011d: 08                                        ; local index
000011e: 4a                                        ; i32.gt_s
000011f: 1b                                        ; select
0000120: 40                                        ; memory.grow
0000121: 00                                        ; memory.grow memidx
0000122: 41                                        ; i32.const
0000123: 00                                        ; i32 literal
0000124: 48                                        ; i32.lt_s
0000125: 04                                        ; if
0000126: 40                                        ; void
0000127: 20                                        ; local.get
0000128: 08                                        ; local index
0000129: 40                                        ; memory.grow
000012a: 00                                        ; memory.grow memidx
000012b: 41                                        ; i32.const
000012c: 00                                        ; i32 literal
000012d: 48                                        ; i32.lt_s
000012e: 04                                        ; if
000012f: 40                                        ; void
0000130: 00                                        ; unreachable
0000131: 0b                                        ; end
0000132: 0b                                        ; end
0000133: 0b                                        ; end
0000134: 20                                        ; local.get
0000135: 04                                        ; local index
0000136: 24                                        ; global.set
0000137: 00                                        ; global index
0000138: 20                                        ; local.get
0000139: 05                                        ; local index
000013a: 20                                        ; local.get
000013b: 06                                        ; local index
000013c: 36                                        ; i32.store
000013d: 02                                        ; alignment
000013e: 00                                        ; store offset
000013f: 20                                        ; local.get
0000140: 03                                        ; local index
0000141: 41                                        ; i32.const
0000142: 04                                        ; i32 literal
0000143: 6b                                        ; i32.sub
0000144: 22                                        ; local.tee
0000145: 04                                        ; local index
0000146: 41                                        ; i32.const
0000147: 00                                        ; i32 literal
0000148: 36                                        ; i32.store
0000149: 02                                        ; alignment
000014a: 04                                        ; store offset
000014b: 20                                        ; local.get
000014c: 04                                        ; local index
000014d: 41                                        ; i32.const
000014e: 00                                        ; i32 literal
000014f: 36                                        ; i32.store
0000150: 02                                        ; alignment
0000151: 08                                        ; store offset
0000152: 20                                        ; local.get
0000153: 04                                        ; local index
0000154: 41                                        ; i32.const
0000155: 04                                        ; i32 literal
0000156: 36                                        ; i32.store
0000157: 02                                        ; alignment
0000158: 0c                                        ; store offset
0000159: 20                                        ; local.get
000015a: 04                                        ; local index
000015b: 20                                        ; local.get
000015c: 02                                        ; local index
000015d: 36                                        ; i32.store
000015e: 02                                        ; alignment
000015f: 10                                        ; store offset
0000160: 20                                        ; local.get
0000161: 03                                        ; local index
0000162: 41                                        ; i32.const
0000163: 10                                        ; i32 literal
0000164: 6a                                        ; i32.add
0000165: 22                                        ; local.tee
0000166: 03                                        ; local index
0000167: 41                                        ; i32.const
0000168: 00                                        ; i32 literal
0000169: 20                                        ; local.get
000016a: 02                                        ; local index
000016b: fc                                        ; prefix
000016c: 0b                                        ; memory.fill
000016d: 00                                        ; memory.fill memidx
000016e: 20                                        ; local.get
000016f: 03                                        ; local index
0000170: 41                                        ; i32.const
0000171: 14                                        ; i32 literal
0000172: 6b                                        ; i32.sub
0000173: 28                                        ; i32.load
0000174: 02                                        ; alignment
0000175: 10                                        ; load offset
0000176: 22                                        ; local.tee
0000177: 04                                        ; local index
0000178: 41                                        ; i32.const
0000179: 00                                        ; i32 literal
000017a: 20                                        ; local.get
000017b: 04                                        ; local index
000017c: 41                                        ; i32.const
000017d: 00                                        ; i32 literal
000017e: 4c                                        ; i32.le_s
000017f: 1b                                        ; select
0000180: 21                                        ; local.set
0000181: 05                                        ; local index
0000182: 20                                        ; local.get
0000183: 04                                        ; local index
0000184: 20                                        ; local.get
0000185: 05                                        ; local index
0000186: 4a                                        ; i32.gt_s
0000187: 04                                        ; if
0000188: 40                                        ; void
0000189: 20                                        ; local.get
000018a: 03                                        ; local index
000018b: 20                                        ; local.get
000018c: 05                                        ; local index
000018d: 6a                                        ; i32.add
000018e: 41                                        ; i32.const
000018f: 01                                        ; i32 literal
0000190: 20                                        ; local.get
0000191: 04                                        ; local index
0000192: 20                                        ; local.get
0000193: 05                                        ; local index
0000194: 6b                                        ; i32.sub
0000195: fc                                        ; prefix
0000196: 0b                                        ; memory.fill
0000197: 00                                        ; memory.fill memidx
0000198: 0b                                        ; end
0000199: 20                                        ; local.get
000019a: 00                                        ; local index
000019b: b2                                        ; f32.convert_i32_s
000019c: 91                                        ; f32.sqrt
000019d: 8e                                        ; f32.floor
000019e: fc                                        ; prefix
000019f: 01                                        ; i32.trunc_sat_f32_u
00001a0: 21                                        ; local.set
00001a1: 04                                        ; local index
00001a2: 03                                        ; loop
00001a3: 40                                        ; void
00001a4: 20                                        ; local.get
00001a5: 01                                        ; local index
00001a6: 20                                        ; local.get
00001a7: 02                                        ; local index
00001a8: 48                                        ; i32.lt_s
00001a9: 04                                        ; if
00001aa: 40                                        ; void
00001ab: 20                                        ; local.get
00001ac: 04                                        ; local index
00001ad: 20                                        ; local.get
00001ae: 01                                        ; local index
00001af: 41                                        ; i32.const
00001b0: 01                                        ; i32 literal
00001b1: 74                                        ; i32.shl
00001b2: 41                                        ; i32.const
00001b3: 03                                        ; i32 literal
00001b4: 6a                                        ; i32.add
00001b5: 22                                        ; local.tee
00001b6: 05                                        ; local index
00001b7: 4f                                        ; i32.ge_u
00001b8: 04                                        ; if
00001b9: 40                                        ; void
00001ba: 20                                        ; local.get
00001bb: 01                                        ; local index
00001bc: 41                                        ; i32.const
00001bd: 01                                        ; i32 literal
00001be: 6a                                        ; i32.add
00001bf: 21                                        ; local.set
00001c0: 00                                        ; local index
00001c1: 03                                        ; loop
00001c2: 40                                        ; void
00001c3: 20                                        ; local.get
00001c4: 00                                        ; local index
00001c5: 20                                        ; local.get
00001c6: 02                                        ; local index
00001c7: 48                                        ; i32.lt_s
00001c8: 04                                        ; if
00001c9: 40                                        ; void
00001ca: 20                                        ; local.get
00001cb: 00                                        ; local index
00001cc: 20                                        ; local.get
00001cd: 03                                        ; local index
00001ce: 6a                                        ; i32.add
00001cf: 2d                                        ; i32.load8_u
00001d0: 00                                        ; alignment
00001d1: 00                                        ; load offset
00001d2: 04                                        ; if
00001d3: 40                                        ; void
00001d4: 20                                        ; local.get
00001d5: 00                                        ; local index
00001d6: 41                                        ; i32.const
00001d7: 01                                        ; i32 literal
00001d8: 74                                        ; i32.shl
00001d9: 41                                        ; i32.const
00001da: 03                                        ; i32 literal
00001db: 6a                                        ; i32.add
00001dc: 20                                        ; local.get
00001dd: 05                                        ; local index
00001de: 70                                        ; i32.rem_u
00001df: 45                                        ; i32.eqz
00001e0: 04                                        ; if
00001e1: 40                                        ; void
00001e2: 20                                        ; local.get
00001e3: 00                                        ; local index
00001e4: 20                                        ; local.get
00001e5: 03                                        ; local index
00001e6: 6a                                        ; i32.add
00001e7: 41                                        ; i32.const
00001e8: 00                                        ; i32 literal
00001e9: 3a                                        ; i32.store8
00001ea: 00                                        ; alignment
00001eb: 00                                        ; store offset
00001ec: 0b                                        ; end
00001ed: 0b                                        ; end
00001ee: 20                                        ; local.get
00001ef: 00                                        ; local index
00001f0: 41                                        ; i32.const
00001f1: 01                                        ; i32 literal
00001f2: 6a                                        ; i32.add
00001f3: 21                                        ; local.set
00001f4: 00                                        ; local index
00001f5: 0c                                        ; br
00001f6: 01                                        ; break depth
00001f7: 0b                                        ; end
00001f8: 0b                                        ; end
00001f9: 20                                        ; local.get
00001fa: 01                                        ; local index
00001fb: 41                                        ; i32.const
00001fc: 01                                        ; i32 literal
00001fd: 6a                                        ; i32.add
00001fe: 21                                        ; local.set
00001ff: 01                                        ; local index
0000200: 0c                                        ; br
0000201: 02                                        ; break depth
0000202: 0b                                        ; end
0000203: 0b                                        ; end
0000204: 0b                                        ; end
0000205: 41                                        ; i32.const
0000206: 02                                        ; i32 literal
0000207: 21                                        ; local.set
0000208: 01                                        ; local index
0000209: 20                                        ; local.get
000020a: 02                                        ; local index
000020b: 41                                        ; i32.const
000020c: 01                                        ; i32 literal
000020d: 6b                                        ; i32.sub
000020e: 21                                        ; local.set
000020f: 00                                        ; local index
0000210: 03                                        ; loop
0000211: 40                                        ; void
0000212: 20                                        ; local.get
0000213: 00                                        ; local index
0000214: 41                                        ; i32.const
0000215: 00                                        ; i32 literal
0000216: 4e                                        ; i32.ge_s
0000217: 04                                        ; if
0000218: 40                                        ; void
0000219: 02                                        ; block
000021a: 40                                        ; void
000021b: 20                                        ; local.get
000021c: 00                                        ; local index
000021d: 20                                        ; local.get
000021e: 03                                        ; local index
000021f: 6a                                        ; i32.add
0000220: 2d                                        ; i32.load8_u
0000221: 00                                        ; alignment
0000222: 00                                        ; load offset
0000223: 04                                        ; if
0000224: 40                                        ; void
0000225: 20                                        ; local.get
0000226: 00                                        ; local index
0000227: 41                                        ; i32.const
0000228: 01                                        ; i32 literal
0000229: 74                                        ; i32.shl
000022a: 41                                        ; i32.const
000022b: 03                                        ; i32 literal
000022c: 6a                                        ; i32.add
000022d: 21                                        ; local.set
000022e: 01                                        ; local index
000022f: 0c                                        ; br
0000230: 01                                        ; break depth
0000231: 0b                                        ; end
0000232: 20                                        ; local.get
0000233: 00                                        ; local index
0000234: 41                                        ; i32.const
0000235: 01                                        ; i32 literal
0000236: 6b                                        ; i32.sub
0000237: 21                                        ; local.set
0000238: 00                                        ; local index
0000239: 0c                                        ; br
000023a: 02                                        ; break depth
000023b: 0b                                        ; end
000023c: 0b                                        ; end
000023d: 0b                                        ; end
000023e: 20                                        ; local.get
000023f: 01                                        ; local index
0000240: 0b                                        ; end
; move data: [62, 241) -> [63, 242)
0000061: df03                                      ; FIXUP func body size
; function body 1
0000242: 00                                        ; func body size (guess)
0000243: 00                                        ; local decl count
0000244: 41                                        ; i32.const
0000245: 900a                                      ; i32 literal
0000247: 41                                        ; i32.const
0000248: c00a                                      ; i32 literal
000024a: 41                                        ; i32.const
000024b: c000                                      ; i32 literal
000024d: 41                                        ; i32.const
000024e: 05                                        ; i32 literal
000024f: 10                                        ; call
0000250: 00                                        ; function index
0000251: 00                                        ; unreachable
0000252: 0b                                        ; end
0000242: 10                                        ; FIXUP func body size
; function body 2
0000253: 00                                        ; func body size (guess)
0000254: 00                                        ; local decl count
0000255: 41                                        ; i32.const
0000256: dc0a                                      ; i32 literal
0000258: 24                                        ; global.set
0000259: 00                                        ; global index
000025a: 0b                                        ; end
0000253: 07                                        ; FIXUP func body size
; move data: [60, 25b) -> [61, 25c)
000005f: fb03                                      ; FIXUP section size
; move data: [5e, 25c) -> [5b, 259)
; truncate to 601 (0x259)
; section "Data" (11)
0000259: 0b                                        ; section code
000025a: 00                                        ; section size (guess)
000025b: 0c                                        ; num data segments
; data segment header 0
000025c: 00                                        ; segment flags
000025d: 41                                        ; i32.const
000025e: 8c08                                      ; i32 literal
0000260: 0b                                        ; end
0000261: 01                                        ; data segment size
; data segment data 0
0000262: 2c                                        ; data segment data
; data segment header 1
0000263: 00                                        ; segment flags
0000264: 41                                        ; i32.const
0000265: 9808                                      ; i32 literal
0000267: 0b                                        ; end
0000268: 23                                        ; data segment size
; data segment data 1
0000269: 0200 0000 1c00 0000 4900 6e00 7600 6100 
0000279: 6c00 6900 6400 2000 6c00 6500 6e00 6700 
0000289: 7400 68                                   ; data segment data
; data segment header 2
000028c: 00                                        ; segment flags
000028d: 41                                        ; i32.const
000028e: bc08                                      ; i32 literal
0000290: 0b                                        ; end
0000291: 01                                        ; data segment size
; data segment data 2
0000292: 3c                                        ; data segment data
; data segment header 3
0000293: 00                                        ; segment flags
0000294: 41                                        ; i32.const
0000295: c808                                      ; i32 literal
0000297: 0b                                        ; end
0000298: 2d                                        ; data segment size
; data segment data 3
0000299: 0200 0000 2600 0000 7e00 6c00 6900 6200 
00002a9: 2f00 7300 7400 6100 7400 6900 6300 6100 
00002b9: 7200 7200 6100 7900 2e00 7400 73          ; data segment data
; data segment header 4
00002c6: 00                                        ; segment flags
00002c7: 41                                        ; i32.const
00002c8: fc08                                      ; i32 literal
00002ca: 0b                                        ; end
00002cb: 01                                        ; data segment size
; data segment data 4
00002cc: 3c                                        ; data segment data
; data segment header 5
00002cd: 00                                        ; segment flags
00002ce: 41                                        ; i32.const
00002cf: 8809                                      ; i32 literal
00002d1: 0b                                        ; end
00002d2: 2f                                        ; data segment size
; data segment data 5
00002d3: 0200 0000 2800 0000 4100 6c00 6c00 6f00 
00002e3: 6300 6100 7400 6900 6f00 6e00 2000 7400 
00002f3: 6f00 6f00 2000 6c00 6100 7200 6700 65     ; data segment data
; data segment header 6
0000302: 00                                        ; segment flags
0000303: 41                                        ; i32.const
0000304: bc09                                      ; i32 literal
0000306: 0b                                        ; end
0000307: 01                                        ; data segment size
; data segment data 6
0000308: 3c                                        ; data segment data
; data segment header 7
0000309: 00                                        ; segment flags
000030a: 41                                        ; i32.const
000030b: c809                                      ; i32 literal
000030d: 0b                                        ; end
000030e: 25                                        ; data segment size
; data segment data 7
000030f: 0200 0000 1e00 0000 7e00 6c00 6900 6200 
000031f: 2f00 7200 7400 2f00 7300 7400 7500 6200 
000032f: 2e00 7400 73                              ; data segment data
; data segment header 8
0000334: 00                                        ; segment flags
0000335: 41                                        ; i32.const
0000336: fc09                                      ; i32 literal
0000338: 0b                                        ; end
0000339: 01                                        ; data segment size
; data segment data 8
000033a: 2c                                        ; data segment data
; data segment header 9
000033b: 00                                        ; segment flags
000033c: 41                                        ; i32.const
000033d: 880a                                      ; i32 literal
000033f: 0b                                        ; end
0000340: 15                                        ; data segment size
; data segment data 9
0000341: 0200 0000 0e00 0000 6100 6200 6f00 7200 
0000351: 7400 6500 64                              ; data segment data
; data segment header 10
0000356: 00                                        ; segment flags
0000357: 41                                        ; i32.const
0000358: ac0a                                      ; i32 literal
000035a: 0b                                        ; end
000035b: 01                                        ; data segment size
; data segment data 10
000035c: 2c                                        ; data segment data
; data segment header 11
000035d: 00                                        ; segment flags
000035e: 41                                        ; i32.const
000035f: b80a                                      ; i32 literal
0000361: 0b                                        ; end
0000362: 19                                        ; data segment size
; data segment data 11
0000363: 0200 0000 1200 0000 6d00 6f00 6400 7500 
0000373: 6c00 6500 2e00 7400 73                    ; data segment data
; move data: [25b, 37c) -> [25c, 37d)
000025a: a102                                      ; FIXUP section size
; section "name"
000037d: 00                                        ; section code
000037e: 00                                        ; section size (guess)
000037f: 04                                        ; string length
0000380: 6e61 6d65                                name  ; custom section name
0000384: 00                                        ; module name type
0000385: 00                                        ; subsection size (guess)
0000386: 0c                                        ; string length
0000387: 4572 6174 6f73 7468 656e 6573            Eratosthenes  ; module name
0000385: 0d                                        ; FIXUP subsection size
0000393: 01                                        ; name subsection type
0000394: 00                                        ; subsection size (guess)
0000395: 04                                        ; num names
0000396: 00                                        ; elem index
0000397: 13                                        ; string length
0000398: 7e6c 6962 2f62 7569 6c74 696e 732f 6162  ~lib/builtins/ab
00003a8: 6f72 74                                  ort  ; elem name 0
00003ab: 01                                        ; elem index
00003ac: 0c                                        ; string length
00003ad: 6d6f 6475 6c65 2f70 7269 6d65            module/prime  ; elem name 1
00003b9: 02                                        ; elem index
00003ba: 0c                                        ; string length
00003bb: 6d6f 6475 6c65 2f61 626f 7274            module/abort  ; elem name 2
00003c7: 03                                        ; elem index
00003c8: 06                                        ; string length
00003c9: 7e73 7461 7274                           ~start  ; elem name 3
0000394: 3a                                        ; FIXUP subsection size
00003cf: 02                                        ; local name type
00003d0: 00                                        ; subsection size (guess)
00003d1: 04                                        ; num functions
00003d2: 00                                        ; function index
00003d3: 00                                        ; num locals
00003d4: 01                                        ; function index
00003d5: 09                                        ; num locals
00003d6: 00                                        ; local index
00003d7: 01                                        ; string length
00003d8: 30                                       0  ; local name 0
00003d9: 01                                        ; local index
00003da: 01                                        ; string length
00003db: 31                                       1  ; local name 1
00003dc: 02                                        ; local index
00003dd: 01                                        ; string length
00003de: 32                                       2  ; local name 2
00003df: 03                                        ; local index
00003e0: 01                                        ; string length
00003e1: 33                                       3  ; local name 3
00003e2: 04                                        ; local index
00003e3: 01                                        ; string length
00003e4: 34                                       4  ; local name 4
00003e5: 05                                        ; local index
00003e6: 01                                        ; string length
00003e7: 35                                       5  ; local name 5
00003e8: 06                                        ; local index
00003e9: 01                                        ; string length
00003ea: 36                                       6  ; local name 6
00003eb: 07                                        ; local index
00003ec: 01                                        ; string length
00003ed: 37                                       7  ; local name 7
00003ee: 08                                        ; local index
00003ef: 01                                        ; string length
00003f0: 38                                       8  ; local name 8
00003f1: 02                                        ; function index
00003f2: 04                                        ; num locals
00003f3: 00                                        ; local index
00003f4: 01                                        ; string length
00003f5: 30                                       0  ; local name 0
00003f6: 01                                        ; local index
00003f7: 01                                        ; string length
00003f8: 31                                       1  ; local name 1
00003f9: 02                                        ; local index
00003fa: 01                                        ; string length
00003fb: 32                                       2  ; local name 2
00003fc: 03                                        ; local index
00003fd: 01                                        ; string length
00003fe: 33                                       3  ; local name 3
00003ff: 03                                        ; function index
0000400: 00                                        ; num locals
00003d0: 30                                        ; FIXUP subsection size
0000401: 04                                        ; name subsection type
0000402: 00                                        ; subsection size (guess)
0000403: 03                                        ; num names
0000404: 00                                        ; elem index
0000405: 17                                        ; string length
0000406: 6933 325f 6933 325f 6933 325f 6933 325f  i32_i32_i32_i32_
0000416: 3d3e 5f6e 6f6e 65                        =>_none  ; elem name 0
000041d: 01                                        ; elem index
000041e: 0a                                        ; string length
000041f: 6933 325f 3d3e 5f69 3332                 i32_=>_i32  ; elem name 1
0000429: 02                                        ; elem index
000042a: 0c                                        ; string length
000042b: 6e6f 6e65 5f3d 3e5f 6e6f 6e65            none_=>_none  ; elem name 2
0000402: 34                                        ; FIXUP subsection size
0000437: 06                                        ; name subsection type
0000438: 00                                        ; subsection size (guess)
0000439: 01                                        ; num names
000043a: 00                                        ; elem index
000043b: 01                                        ; string length
000043c: 30                                       0  ; elem name 0
0000438: 04                                        ; FIXUP subsection size
000043d: 07                                        ; name subsection type
000043e: 00                                        ; subsection size (guess)
000043f: 01                                        ; num names
0000440: 00                                        ; elem index
0000441: 13                                        ; string length
0000442: 7e6c 6962 2f72 742f 7374 7562 2f6f 6666  ~lib/rt/stub/off
0000452: 7365 74                                  set  ; elem name 0
000043e: 16                                        ; FIXUP subsection size
; move data: [37f, 455) -> [380, 456)
000037e: d601                                      ; FIXUP section size